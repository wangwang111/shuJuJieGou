Manacher算法(求一个字符串中，最长回文子串)		时间复杂度:O(n)

普通方式，以某个字符作为中间向两边扩(奇数能扩，偶数不能扩，例：1221)    时间复杂度:O(n^2)
Manacher算法:把每一个字符前后加一个特殊字符(可是任何字符)，每个字符之间加上一个特殊字符
	例如：1221    --》     #1#2#2#1#		
	奇回文同样适用，解决：虚轴问题
则最长回文长度等于，原回文=总数/2  (向下取整)

三个变量:(PR和index是配合使用)
	1.数组pArr[]:数组长度和处理后长度一样，数组值是最长回文半径长度
	2.整数PR:最长回文半径即将到达位置，即最长回文半径最右位置的下一个位置
	3.index:当PR更新的时候，那个回文中心位置
	



KMP算法

next[]数组，与match相关
next[]长度=match
next[i]表示match中i位置前面 ，前缀等于后缀最长的长度

例如：
123123b
      b位置next[6]=3
前缀不能包含最后一个字符，后缀第一个字符



bfprt算法
给定一个无序的整型数组arr，找到其中最小的k个数
1，将arr中的n个元素划分成n/5组，每组5个元素，如果最后的组不够5个元素，那么最后
	剩下的元素为一组(n%5个元素)；
2.组内插入排序，组件不排序，中位数拿出来，组成数组arrM
3.求所有中位数的中位数，递归调用整个过程   --》 返回值：记为king，这个king作为划分元素
4.下面步骤和快排一样，king进行划分





【题目一】 -> 大佬采访之前，讲过这个题，现场询问大家要不要重新讲
 给定两个有序数组arr1和arr2，再给定一个整数k，返回所有的数中第K小的数。
【举例】 
	arr1=[1,2,3,4,5]，arr2=[3,4,5]，k=1。
	1是所有数中第1小的数，所以返回1。 
	arr1=[1,2,3]，arr2=[3,4,5,6]，k=4。 
	3是所有数中第4小的数，所以返回3。

【题目二】
统计完全二叉树的节点数 

【题目】 
给定一棵完全二叉树的头节点head，返回这棵树的节点个数。 
【要求】 
如果完全二叉树的节点数为N，请实现时间复杂度低于O(N)的解法。

【题目三】 
给定两个字符串str1和str2，如果str1和str2中出现的字符种类一样且每种字符出现的次数也一样，
那么str1与str2互为变形词。请实现函数判断两个字符串是否互为变形词。 
【举例】 str1="123"，str2="231"，返回true。
str1="123"，str2="2331"，返回false。

 【题目四】 
 如果一个字符串str，把字符串str前面任意的部分挪到后面形成的字符串叫作str的旋转词。
 比如str="12345"，str的旋转词有"12345"、"23451"、"34512"、"45123"和"51234"。
 给定两个字符串a和b，请判断a和b是否互为旋转词。  
 
 【题目五】-> 看看时间来不来得及，来不及下回讲。
详解manacher算法，及其扩展
